<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TimetableCycleSubject', 'doctrine');

/**
 * BaseTimetableCycleSubject
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $cycle_id
 * @property integer $timetable_id
 * @property integer $teacher_id
 * @property string $subject_name
 * @property string $subject_contraction
 * @property string $teacher_contraction
 * @property Cycle $Cycle
 * @property Timetable $Timetable
 * @property SubjectRef $SubjectRef
 * @property TeacherRef $TeacherRef
 * @property Doctrine_Collection $TimetableItem
 * 
 * @method integer               getCycleId()             Returns the current record's "cycle_id" value
 * @method integer               getTimetableId()         Returns the current record's "timetable_id" value
 * @method integer               getTeacherId()           Returns the current record's "teacher_id" value
 * @method string                getSubjectName()         Returns the current record's "subject_name" value
 * @method string                getSubjectContraction()  Returns the current record's "subject_contraction" value
 * @method string                getTeacherContraction()  Returns the current record's "teacher_contraction" value
 * @method Cycle                 getCycle()               Returns the current record's "Cycle" value
 * @method Timetable             getTimetable()           Returns the current record's "Timetable" value
 * @method SubjectRef            getSubjectRef()          Returns the current record's "SubjectRef" value
 * @method TeacherRef            getTeacherRef()          Returns the current record's "TeacherRef" value
 * @method Doctrine_Collection   getTimetableItem()       Returns the current record's "TimetableItem" collection
 * @method TimetableCycleSubject setCycleId()             Sets the current record's "cycle_id" value
 * @method TimetableCycleSubject setTimetableId()         Sets the current record's "timetable_id" value
 * @method TimetableCycleSubject setTeacherId()           Sets the current record's "teacher_id" value
 * @method TimetableCycleSubject setSubjectName()         Sets the current record's "subject_name" value
 * @method TimetableCycleSubject setSubjectContraction()  Sets the current record's "subject_contraction" value
 * @method TimetableCycleSubject setTeacherContraction()  Sets the current record's "teacher_contraction" value
 * @method TimetableCycleSubject setCycle()               Sets the current record's "Cycle" value
 * @method TimetableCycleSubject setTimetable()           Sets the current record's "Timetable" value
 * @method TimetableCycleSubject setSubjectRef()          Sets the current record's "SubjectRef" value
 * @method TimetableCycleSubject setTeacherRef()          Sets the current record's "TeacherRef" value
 * @method TimetableCycleSubject setTimetableItem()       Sets the current record's "TimetableItem" collection
 * 
 * @package    timetable
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTimetableCycleSubject extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('timetable_cycle_subject');
        $this->hasColumn('cycle_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('timetable_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('teacher_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('subject_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('subject_contraction', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('teacher_contraction', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Cycle', array(
             'local' => 'cycle_id',
             'foreign' => 'id'));

        $this->hasOne('Timetable', array(
             'local' => 'timetable_id',
             'foreign' => 'id'));

        $this->hasOne('SubjectRef', array(
             'local' => 'subject_id',
             'foreign' => 'id'));

        $this->hasOne('TeacherRef', array(
             'local' => 'teacher_id',
             'foreign' => 'id'));

        $this->hasMany('TimetableItem', array(
             'local' => 'id',
             'foreign' => 'entity_id'));
    }
}