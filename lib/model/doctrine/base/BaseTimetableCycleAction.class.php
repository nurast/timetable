<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TimetableCycleAction', 'doctrine');

/**
 * BaseTimetableCycleAction
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $cycle_id
 * @property integer $timetable_id
 * @property integer $action_id
 * @property integer $teacher_id
 * @property string $teacher_contraction
 * @property Cycle $Cycle
 * @property Timetable $Timetable
 * @property TimetableAction $TimetableAction
 * @property TeacherRef $TeacherRef
 * @property Doctrine_Collection $TimetableActionItem
 * 
 * @method integer              getCycleId()             Returns the current record's "cycle_id" value
 * @method integer              getTimetableId()         Returns the current record's "timetable_id" value
 * @method integer              getActionId()            Returns the current record's "action_id" value
 * @method integer              getTeacherId()           Returns the current record's "teacher_id" value
 * @method string               getTeacherContraction()  Returns the current record's "teacher_contraction" value
 * @method Cycle                getCycle()               Returns the current record's "Cycle" value
 * @method Timetable            getTimetable()           Returns the current record's "Timetable" value
 * @method TimetableAction      getTimetableAction()     Returns the current record's "TimetableAction" value
 * @method TeacherRef           getTeacherRef()          Returns the current record's "TeacherRef" value
 * @method Doctrine_Collection  getTimetableActionItem() Returns the current record's "TimetableActionItem" collection
 * @method TimetableCycleAction setCycleId()             Sets the current record's "cycle_id" value
 * @method TimetableCycleAction setTimetableId()         Sets the current record's "timetable_id" value
 * @method TimetableCycleAction setActionId()            Sets the current record's "action_id" value
 * @method TimetableCycleAction setTeacherId()           Sets the current record's "teacher_id" value
 * @method TimetableCycleAction setTeacherContraction()  Sets the current record's "teacher_contraction" value
 * @method TimetableCycleAction setCycle()               Sets the current record's "Cycle" value
 * @method TimetableCycleAction setTimetable()           Sets the current record's "Timetable" value
 * @method TimetableCycleAction setTimetableAction()     Sets the current record's "TimetableAction" value
 * @method TimetableCycleAction setTeacherRef()          Sets the current record's "TeacherRef" value
 * @method TimetableCycleAction setTimetableActionItem() Sets the current record's "TimetableActionItem" collection
 * 
 * @package    timetable
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTimetableCycleAction extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('timetable_cycle_action');
        $this->hasColumn('cycle_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('timetable_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('action_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('teacher_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('teacher_contraction', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Cycle', array(
             'local' => 'cycle_id',
             'foreign' => 'id'));

        $this->hasOne('Timetable', array(
             'local' => 'timetable_id',
             'foreign' => 'id'));

        $this->hasOne('TimetableAction', array(
             'local' => 'action_id',
             'foreign' => 'id'));

        $this->hasOne('TeacherRef', array(
             'local' => 'teacher_id',
             'foreign' => 'id'));

        $this->hasMany('TimetableActionItem', array(
             'local' => 'id',
             'foreign' => 'entity_id'));
    }
}