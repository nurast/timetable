<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('CycleRef', 'doctrine');

/**
 * BaseCycleRef
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property integer $instruction_id
 * @property integer $course_id
 * @property float $duration
 * @property InstructionRef $InstructionRef
 * @property CourseRef $CourseRef
 * @property Doctrine_Collection $Cycle
 * @property Doctrine_Collection $CycleSubject
 * @property Doctrine_Collection $Managercycle
 * 
 * @method integer             getId()             Returns the current record's "id" value
 * @method string              getName()           Returns the current record's "name" value
 * @method integer             getInstructionId()  Returns the current record's "instruction_id" value
 * @method integer             getCourseId()       Returns the current record's "course_id" value
 * @method float               getDuration()       Returns the current record's "duration" value
 * @method InstructionRef      getInstructionRef() Returns the current record's "InstructionRef" value
 * @method CourseRef           getCourseRef()      Returns the current record's "CourseRef" value
 * @method Doctrine_Collection getCycle()          Returns the current record's "Cycle" collection
 * @method Doctrine_Collection getCycleSubject()   Returns the current record's "CycleSubject" collection
 * @method Doctrine_Collection getManagercycle()   Returns the current record's "Managercycle" collection
 * @method CycleRef            setId()             Sets the current record's "id" value
 * @method CycleRef            setName()           Sets the current record's "name" value
 * @method CycleRef            setInstructionId()  Sets the current record's "instruction_id" value
 * @method CycleRef            setCourseId()       Sets the current record's "course_id" value
 * @method CycleRef            setDuration()       Sets the current record's "duration" value
 * @method CycleRef            setInstructionRef() Sets the current record's "InstructionRef" value
 * @method CycleRef            setCourseRef()      Sets the current record's "CourseRef" value
 * @method CycleRef            setCycle()          Sets the current record's "Cycle" collection
 * @method CycleRef            setCycleSubject()   Sets the current record's "CycleSubject" collection
 * @method CycleRef            setManagercycle()   Sets the current record's "Managercycle" collection
 * 
 * @package    timetable
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCycleRef extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cycle_ref');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('instruction_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('course_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('duration', 'float', 9, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 9,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('InstructionRef', array(
             'local' => 'instruction_id',
             'foreign' => 'id'));

        $this->hasOne('CourseRef', array(
             'local' => 'course_id',
             'foreign' => 'id'));

        $this->hasMany('Cycle', array(
             'local' => 'id',
             'foreign' => 'cycle_id'));

        $this->hasMany('CycleSubject', array(
             'local' => 'id',
             'foreign' => 'cycle_id'));

        $this->hasMany('Managercycle', array(
             'local' => 'id',
             'foreign' => 'cycle_id'));
    }
}