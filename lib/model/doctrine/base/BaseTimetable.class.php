<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Timetable', 'doctrine');

/**
 * BaseTimetable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $cycle_id
 * @property date $start
 * @property date $finish
 * @property integer $brigade_count
 * @property string $town
 * @property integer $hour_count
 * @property Cycle $Cycle
 * @property Doctrine_Collection $TimetableItem
 * @property Doctrine_Collection $TimetableActionItem
 * @property Doctrine_Collection $TimetableCycleSubject
 * @property Doctrine_Collection $TimetableCycleAction
 * 
 * @method integer             getCycleId()               Returns the current record's "cycle_id" value
 * @method date                getStart()                 Returns the current record's "start" value
 * @method date                getFinish()                Returns the current record's "finish" value
 * @method integer             getBrigadeCount()          Returns the current record's "brigade_count" value
 * @method string              getTown()                  Returns the current record's "town" value
 * @method integer             getHourCount()             Returns the current record's "hour_count" value
 * @method Cycle               getCycle()                 Returns the current record's "Cycle" value
 * @method Doctrine_Collection getTimetableItem()         Returns the current record's "TimetableItem" collection
 * @method Doctrine_Collection getTimetableActionItem()   Returns the current record's "TimetableActionItem" collection
 * @method Doctrine_Collection getTimetableCycleSubject() Returns the current record's "TimetableCycleSubject" collection
 * @method Doctrine_Collection getTimetableCycleAction()  Returns the current record's "TimetableCycleAction" collection
 * @method Timetable           setCycleId()               Sets the current record's "cycle_id" value
 * @method Timetable           setStart()                 Sets the current record's "start" value
 * @method Timetable           setFinish()                Sets the current record's "finish" value
 * @method Timetable           setBrigadeCount()          Sets the current record's "brigade_count" value
 * @method Timetable           setTown()                  Sets the current record's "town" value
 * @method Timetable           setHourCount()             Sets the current record's "hour_count" value
 * @method Timetable           setCycle()                 Sets the current record's "Cycle" value
 * @method Timetable           setTimetableItem()         Sets the current record's "TimetableItem" collection
 * @method Timetable           setTimetableActionItem()   Sets the current record's "TimetableActionItem" collection
 * @method Timetable           setTimetableCycleSubject() Sets the current record's "TimetableCycleSubject" collection
 * @method Timetable           setTimetableCycleAction()  Sets the current record's "TimetableCycleAction" collection
 * 
 * @package    timetable
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTimetable extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('timetable');
        $this->hasColumn('cycle_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('start', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('finish', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('brigade_count', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('town', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('hour_count', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Cycle', array(
             'local' => 'cycle_id',
             'foreign' => 'id'));

        $this->hasMany('TimetableItem', array(
             'local' => 'id',
             'foreign' => 'timetable_id'));

        $this->hasMany('TimetableActionItem', array(
             'local' => 'id',
             'foreign' => 'timetable_id'));

        $this->hasMany('TimetableCycleSubject', array(
             'local' => 'id',
             'foreign' => 'timetable_id'));

        $this->hasMany('TimetableCycleAction', array(
             'local' => 'id',
             'foreign' => 'timetable_id'));
    }
}